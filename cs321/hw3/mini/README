This folder contains Java sources (including components using jacc
and jflex) for the front end of a mini imperative language compiler.
We'll refer to the language that this compiler accepts as "Mini" in
the rest of this document.

The following list provides a more detailed overview of the contents
of this folder:

README
  This file!

compiler/*.java
  The compiler framework for error handling, etc, that you have seen
  in previous homeworks.

mini/Mini.jflex
  JFlex source code for a lexer for the "Mini" language.

mini/Mini.jacc
  Jacc source code for a parser for the "Mini" language

mini/*.java
  A collection of Java source files, including:

  - code generated by JFlex and jacc, so that you can get started
    without having to install/run those tools (although you will
    need to install them later if you want to extend or modify the
    lexer or parser).

  - A collection of classes that are used to represent the abstract
    syntax of the "Mini" language.  There are quite a lot of these,
    but they are all quite small and most are very straightforward,
    each corresponding to a particular .

  - Two sample output phases, IndentOutput and DotOutput, that are
    used to convert abstract syntax trees into textual representations.
    The first produces text on the console using indentation to show
    the underlying structure, while the second produces text in the
    format that is used by the GraphViz tools (http://www.graphviz.org).
    (Note that the graphviz tools are already installed on the Linuxlab
    computers, but there are installers for common platforms if you want
    to run them on your own machine.)

  - To sample programs, IndentTest and DotTest, that use the IndentOutput
    and DotOutput phases, respectively, for the purposes of simple tests.

sample.mini
  A small, sample input file in the "Mini" language.


On my machine, I can compile the "Mini" front end as follows:

  - First run jacc to build MiniParser.java and MiniTokens.java:

    jacc mini/Mini.jacc

  - Now run jflex to build MiniLexer.java

    ~/local/jflex/bin/jflex mini/Mini.jflex 

  - Now compile the Java sources, including both generated and
    handwritten components:

    javac compiler/*.java mini/*.java

For testing, I can use commands like:

  java mini.IndentTest sample.mini

  java mini.DotTest sample.mini > sample.dot

The first prints an indented description of the AST for the program in
sample.mini on the terminal, while the second writes a dot-format
version of the AST to the file sample.dot.
